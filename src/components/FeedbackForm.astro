---
// Feedback Form Component
---

<div class="feedback-form-container">
  <div class="bg-background border border-border rounded-lg p-6 shadow-sm">
    <h3 class="text-xl font-bold text-accent mb-2">建议新工具</h3>
    <p class="text-sm text-foreground/70 mb-4">
      您需要什么新工具？建议我们，我们会尝试在网站中实现该工具。
    </p>

    <!-- Feedback Form -->
    <form id="feedback-form" class="space-y-4">
      <!-- Suggestion Text Area -->
      <div>
        <label for="suggestion" class="block text-sm font-medium text-foreground mb-2">
          您的建议 <span class="text-red-500">*</span>
        </label>
        <textarea
          id="suggestion"
          name="suggestion"
          rows="4"
          placeholder="请输入您的建议..."
          class="w-full px-3 py-2 border border-border rounded-lg focus:outline-none focus:ring-2 focus:ring-accent focus:border-accent resize-none text-sm"
          required
          minlength="10"
          maxlength="500"
        ></textarea>
        <div class="flex justify-between text-xs text-foreground/60 mt-1">
          <span>最少10个字符</span>
          <span id="char-count">0/500</span>
        </div>
      </div>

      <!-- Email Field (Optional) -->
      <div>
        <label for="email" class="block text-sm font-medium text-foreground mb-2">
          邮箱地址 <span class="text-foreground/60">(可选)</span>
        </label>
        <input
          type="email"
          id="email"
          name="email"
          placeholder="your.email@example.com"
          class="w-full px-3 py-2 border border-border rounded-lg focus:outline-none focus:ring-2 focus:ring-accent focus:border-accent text-sm"
        />
        <p class="text-xs text-foreground/60 mt-1">
          仅在您希望我们回复时填写
        </p>
      </div>

      <!-- Privacy Agreement -->
      <div class="space-y-2">
        <label class="flex items-start space-x-2 text-sm">
          <input
            type="checkbox"
            id="privacy-agreement"
            name="privacy-agreement"
            required
            class="mt-0.5 h-4 w-4 text-accent focus:ring-accent border-border rounded"
          />
          <span class="text-foreground/80">
            我同意 <button type="button" id="privacy-toggle" class="text-accent hover:underline">隐私政策</button> <span class="text-red-500">*</span>
          </span>
        </label>
        
        <!-- Privacy Policy (Expandable) -->
        <div id="privacy-policy" class="hidden bg-muted/20 p-3 rounded text-xs text-foreground/70">
          <h4 class="font-medium mb-2">隐私承诺：</h4>
          <ul class="space-y-1 list-disc list-inside">
            <li>我们承诺保护您的信息机密性</li>
            <li>绝不会分享或泄露您的数据</li>
            <li>邮箱地址仅用于回复您的建议（如果您提供）</li>
            <li>您可以随时要求删除您的数据</li>
          </ul>
        </div>
      </div>

      <!-- Submit Button -->
      <button
        type="submit"
        id="submit-btn"
        class="w-full bg-accent text-background py-2 px-4 rounded-lg hover:bg-accent/90 transition-colors font-medium text-sm disabled:opacity-50 disabled:cursor-not-allowed"
      >
        发送反馈
      </button>
    </form>

    <!-- Status Messages -->
    <div id="form-status" class="mt-4 hidden">
      <div id="success-message" class="hidden bg-green-50 border border-green-200 text-green-800 px-3 py-2 rounded text-sm">
        ✅ 感谢您的反馈！我们已收到您的建议。
      </div>
      <div id="error-message" class="hidden bg-red-50 border border-red-200 text-red-800 px-3 py-2 rounded text-sm">
        ❌ <span id="error-text">提交失败，请稍后重试。</span>
      </div>
    </div>
  </div>
</div>

<script>
  function initFeedbackForm() {
    const form = document.getElementById('feedback-form') as HTMLFormElement;
    const suggestionTextarea = document.getElementById('suggestion') as HTMLTextAreaElement;
    const charCount = document.getElementById('char-count') as HTMLElement;
    const privacyToggle = document.getElementById('privacy-toggle') as HTMLButtonElement;
    const privacyPolicy = document.getElementById('privacy-policy') as HTMLElement;
    const submitBtn = document.getElementById('submit-btn') as HTMLButtonElement;
    const formStatus = document.getElementById('form-status') as HTMLElement;
    const successMessage = document.getElementById('success-message') as HTMLElement;
    const errorMessage = document.getElementById('error-message') as HTMLElement;
    const errorText = document.getElementById('error-text') as HTMLElement;

    // Character count update
    suggestionTextarea?.addEventListener('input', () => {
      const length = suggestionTextarea.value.length;
      charCount.textContent = `${length}/500`;
      
      if (length < 10) {
        charCount.classList.add('text-red-500');
        charCount.classList.remove('text-foreground/60');
      } else {
        charCount.classList.remove('text-red-500');
        charCount.classList.add('text-foreground/60');
      }
    });

    // Privacy policy toggle
    privacyToggle?.addEventListener('click', (e) => {
      e.preventDefault();
      privacyPolicy.classList.toggle('hidden');
    });

    // Form submission
    form?.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const formData = new FormData(form);
      const suggestion = formData.get('suggestion') as string;
      const email = formData.get('email') as string;
      const privacyAgreement = formData.get('privacy-agreement');

      // Validation
      if (!suggestion || suggestion.length < 10) {
        showError('建议内容至少需要10个字符');
        return;
      }

      if (!privacyAgreement) {
        showError('请同意隐私政策');
        return;
      }

      // Show loading state
      submitBtn.disabled = true;
      submitBtn.textContent = '提交中...';
      hideMessages();

      try {
        // Submit to Supabase
        const response = await fetch('/api/feedback', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            suggestion: suggestion.trim(),
            email: email.trim() || null,
            timestamp: new Date().toISOString(),
            user_agent: navigator.userAgent,
            page_url: window.location.href
          })
        });

        if (response.ok) {
          showSuccess();
          form.reset();
          charCount.textContent = '0/500';
        } else {
          const errorData = await response.json();
          showError(errorData.message || '提交失败，请稍后重试');
        }
      } catch (error) {
        console.error('Feedback submission error:', error);
        showError('网络错误，请检查连接后重试');
      } finally {
        submitBtn.disabled = false;
        submitBtn.textContent = '发送反馈';
      }
    });

    function showSuccess() {
      formStatus.classList.remove('hidden');
      successMessage.classList.remove('hidden');
      errorMessage.classList.add('hidden');
    }

    function showError(message: string) {
      formStatus.classList.remove('hidden');
      errorMessage.classList.remove('hidden');
      successMessage.classList.add('hidden');
      errorText.textContent = message;
    }

    function hideMessages() {
      formStatus.classList.add('hidden');
      successMessage.classList.add('hidden');
      errorMessage.classList.add('hidden');
    }
  }

  // Initialize on page load
  initFeedbackForm();

  // Re-initialize on view transitions
  document.addEventListener('astro:after-swap', initFeedbackForm);
</script>

<style>
  .feedback-form-container {
    position: sticky;
    top: 2rem;
  }
</style>
